add_test( PickAndPlaceMockTest.InitializeRobot /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=PickAndPlaceMockTest.InitializeRobot]==] --gtest_also_run_disabled_tests)
set_tests_properties( PickAndPlaceMockTest.InitializeRobot PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( PickAndPlaceMockTest.PickObjectSuccess /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=PickAndPlaceMockTest.PickObjectSuccess]==] --gtest_also_run_disabled_tests)
set_tests_properties( PickAndPlaceMockTest.PickObjectSuccess PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( PickAndPlaceMockTest.PickObjectFailure /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=PickAndPlaceMockTest.PickObjectFailure]==] --gtest_also_run_disabled_tests)
set_tests_properties( PickAndPlaceMockTest.PickObjectFailure PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( PickAndPlaceMockTest.PlaceObjectSuccess /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=PickAndPlaceMockTest.PlaceObjectSuccess]==] --gtest_also_run_disabled_tests)
set_tests_properties( PickAndPlaceMockTest.PlaceObjectSuccess PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( PickAndPlaceMockTest.PlaceObjectFailure /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=PickAndPlaceMockTest.PlaceObjectFailure]==] --gtest_also_run_disabled_tests)
set_tests_properties( PickAndPlaceMockTest.PlaceObjectFailure PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( PickAndPlaceMockTest.Logic1 /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=PickAndPlaceMockTest.Logic1]==] --gtest_also_run_disabled_tests)
set_tests_properties( PickAndPlaceMockTest.Logic1 PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( PickAndPlaceArmMockTest.PickObjectSuccess /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=PickAndPlaceArmMockTest.PickObjectSuccess]==] --gtest_also_run_disabled_tests)
set_tests_properties( PickAndPlaceArmMockTest.PickObjectSuccess PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( PickAndPlaceArmMockTest.PlaceObjectSuccess /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=PickAndPlaceArmMockTest.PlaceObjectSuccess]==] --gtest_also_run_disabled_tests)
set_tests_properties( PickAndPlaceArmMockTest.PlaceObjectSuccess PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( TwoArmsRobotTest.OneTask /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=TwoArmsRobotTest.OneTask]==] --gtest_also_run_disabled_tests)
set_tests_properties( TwoArmsRobotTest.OneTask PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( TwoArmsRobotTest.TwoTasks /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=TwoArmsRobotTest.TwoTasks]==] --gtest_also_run_disabled_tests)
set_tests_properties( TwoArmsRobotTest.TwoTasks PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( BehaviorTreeTest.ActionNodeSuccess /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=BehaviorTreeTest.ActionNodeSuccess]==] --gtest_also_run_disabled_tests)
set_tests_properties( BehaviorTreeTest.ActionNodeSuccess PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( BehaviorTreeTest.ActionNodeFailure /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=BehaviorTreeTest.ActionNodeFailure]==] --gtest_also_run_disabled_tests)
set_tests_properties( BehaviorTreeTest.ActionNodeFailure PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( BehaviorTreeTest.ConditionNodeSuccess /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=BehaviorTreeTest.ConditionNodeSuccess]==] --gtest_also_run_disabled_tests)
set_tests_properties( BehaviorTreeTest.ConditionNodeSuccess PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( BehaviorTreeTest.ConditionNodeFailure /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=BehaviorTreeTest.ConditionNodeFailure]==] --gtest_also_run_disabled_tests)
set_tests_properties( BehaviorTreeTest.ConditionNodeFailure PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( BehaviorTreeTest.ConditionNodeException /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=BehaviorTreeTest.ConditionNodeException]==] --gtest_also_run_disabled_tests)
set_tests_properties( BehaviorTreeTest.ConditionNodeException PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( BehaviorTreeTest.SequenceMemory /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=BehaviorTreeTest.SequenceMemory]==] --gtest_also_run_disabled_tests)
set_tests_properties( BehaviorTreeTest.SequenceMemory PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( BehaviorTreeTest.FallbackMemory /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=BehaviorTreeTest.FallbackMemory]==] --gtest_also_run_disabled_tests)
set_tests_properties( BehaviorTreeTest.FallbackMemory PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( BehaviorTreeTest.SequenceMemoryReset /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=BehaviorTreeTest.SequenceMemoryReset]==] --gtest_also_run_disabled_tests)
set_tests_properties( BehaviorTreeTest.SequenceMemoryReset PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( BehaviorTreeTest.SequenceMemoryMultipleActions /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=BehaviorTreeTest.SequenceMemoryMultipleActions]==] --gtest_also_run_disabled_tests)
set_tests_properties( BehaviorTreeTest.SequenceMemoryMultipleActions PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( BehaviorTreeTest.FallbackMemoryMultipleActions /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=BehaviorTreeTest.FallbackMemoryMultipleActions]==] --gtest_also_run_disabled_tests)
set_tests_properties( BehaviorTreeTest.FallbackMemoryMultipleActions PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( BehaviorTreeTest.SequenceMemoryAllConditionsMet /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=BehaviorTreeTest.SequenceMemoryAllConditionsMet]==] --gtest_also_run_disabled_tests)
set_tests_properties( BehaviorTreeTest.SequenceMemoryAllConditionsMet PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( BehaviorTreeTest.Action /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=BehaviorTreeTest.Action]==] --gtest_also_run_disabled_tests)
set_tests_properties( BehaviorTreeTest.Action PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( BehaviorTreeTest.Condition /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=BehaviorTreeTest.Condition]==] --gtest_also_run_disabled_tests)
set_tests_properties( BehaviorTreeTest.Condition PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( BehaviorTreeTest.Sequence /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=BehaviorTreeTest.Sequence]==] --gtest_also_run_disabled_tests)
set_tests_properties( BehaviorTreeTest.Sequence PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( BehaviorTreeTest.Fallback /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=BehaviorTreeTest.Fallback]==] --gtest_also_run_disabled_tests)
set_tests_properties( BehaviorTreeTest.Fallback PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( BehaviorTreeTest.Parallel /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=BehaviorTreeTest.Parallel]==] --gtest_also_run_disabled_tests)
set_tests_properties( BehaviorTreeTest.Parallel PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( StatusTest.ConstructorAndState /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=StatusTest.ConstructorAndState]==] --gtest_also_run_disabled_tests)
set_tests_properties( StatusTest.ConstructorAndState PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( StatusTest.ConversionToBoolean /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=StatusTest.ConversionToBoolean]==] --gtest_also_run_disabled_tests)
set_tests_properties( StatusTest.ConversionToBoolean PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( StatusTest.StreamOutput /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test/behavior_tree_test [==[--gtest_filter=StatusTest.StreamOutput]==] --gtest_also_run_disabled_tests)
set_tests_properties( StatusTest.StreamOutput PROPERTIES WORKING_DIRECTORY /home/evgeniy/Documents/code/test/behavior_tree/build/behavior_tree/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set( behavior_tree_test_TESTS PickAndPlaceMockTest.InitializeRobot PickAndPlaceMockTest.PickObjectSuccess PickAndPlaceMockTest.PickObjectFailure PickAndPlaceMockTest.PlaceObjectSuccess PickAndPlaceMockTest.PlaceObjectFailure PickAndPlaceMockTest.Logic1 PickAndPlaceArmMockTest.PickObjectSuccess PickAndPlaceArmMockTest.PlaceObjectSuccess TwoArmsRobotTest.OneTask TwoArmsRobotTest.TwoTasks BehaviorTreeTest.ActionNodeSuccess BehaviorTreeTest.ActionNodeFailure BehaviorTreeTest.ConditionNodeSuccess BehaviorTreeTest.ConditionNodeFailure BehaviorTreeTest.ConditionNodeException BehaviorTreeTest.SequenceMemory BehaviorTreeTest.FallbackMemory BehaviorTreeTest.SequenceMemoryReset BehaviorTreeTest.SequenceMemoryMultipleActions BehaviorTreeTest.FallbackMemoryMultipleActions BehaviorTreeTest.SequenceMemoryAllConditionsMet BehaviorTreeTest.Action BehaviorTreeTest.Condition BehaviorTreeTest.Sequence BehaviorTreeTest.Fallback BehaviorTreeTest.Parallel StatusTest.ConstructorAndState StatusTest.ConversionToBoolean StatusTest.StreamOutput)
